'reposted' = sapply(1:nrow(items), function(k) ifelse(is.null(items$copy_history[k][[1]]), 0, 1)),
'reposted_from_id' = sapply(1:nrow(items), function(k) ifelse(is.null(items$copy_history[k][[1]]), NA, items$copy_history[k][[1]]$from_id)),
'reposted_original_date' = sapply(1:nrow(items), function(k) ifelse(is.null(items$copy_history[k][[1]]), NA, as.Date(as.POSIXct(items$copy_history[k][[1]]$date, origin="1970-01-01")))),
'reposted_original_date_POSIXct' = sapply(1:nrow(items), function(k) ifelse(is.null(items$copy_history[k][[1]]), NA, items$copy_history[k][[1]]$date)),
'attachment' = sapply(1:nrow(items), function(k) ifelse(!is.null(items$attachments[k][[1]]), items$attachments[k][[1]]$type, ifelse(is.null(unique(items$copy_history[k][[1]]$attachment[[1]]$type)), NA, unique(items$copy_history[k][[1]]$attachment[[1]]$type))  )),
stringsAsFactors = F)
rep_text <- sapply(1:nrow(items), function(k) ifelse(is.null(items$copy_history[k][[1]]), NA, items$copy_history[k][[1]]$text))
output$text[output$reposted == 1] <- rep_text[which(!is.na(rep_text))]
View(output)
getUserWall <- function(user_id, access_token) {
fetched <- jsonlite::fromJSON(paste0('https://api.vk.com/method/wall.get?owner_id=', user_id,'&count=100&fields=sex,bdate,city,country,timezone,photo_100,has_mobile,contacts,education,online,relation,last_seen,status,can_write_private_message,can_see_all_posts,can_post,universities&v=5.64&extended=0&access_token=', access_token))
items <- fetched$response$items
output <- data.frame('id' = items$id,
'date' = as.Date(as.POSIXct(items$date, origin="1970-01-01")),
'date_POSIXct' = items$date,
'text' = items$text,
'comments_count' = items$comments$count,
'likes_count' = items$likes$count,
'reposts_count' = items$reposts$count,
'reposted' = sapply(1:nrow(items), function(k) ifelse(is.null(items$copy_history[k][[1]]), 0, 1)),
'reposted_from_id' = sapply(1:nrow(items), function(k) ifelse(is.null(items$copy_history[k][[1]]), NA, items$copy_history[k][[1]]$from_id)),
'reposted_original_date' = sapply(1:nrow(items), function(k) ifelse(is.null(items$copy_history[k][[1]]), NA, as.Date(as.POSIXct(items$copy_history[k][[1]]$date, origin="1970-01-01")))),
'reposted_original_date_POSIXct' = sapply(1:nrow(items), function(k) ifelse(is.null(items$copy_history[k][[1]]), NA, items$copy_history[k][[1]]$date)),
'attachment' = sapply(1:nrow(items), function(k) ifelse(!is.null(items$attachments[k][[1]]), items$attachments[k][[1]]$type, ifelse(is.null(unique(items$copy_history[k][[1]]$attachment[[1]]$type)), NA, unique(items$copy_history[k][[1]]$attachment[[1]]$type))  )),
stringsAsFactors = F)
rep_text <- sapply(1:nrow(items), function(k) ifelse(is.null(items$copy_history[k][[1]]), NA, items$copy_history[k][[1]]$text))
output$text[output$reposted == 1] <- rep_text[which(!is.na(rep_text))]
return(output)
}
rm(list = ls())
source('~/Dropbox/Math/PROGRAMMING/R/Code/scrape_vk.R')
mytoken = '2e5e3352d9edb2e150c855162bd7e380d80188f1d6d5701ef8b8a32b570c995206ee7681b4b42e3a45c89'
id1 = 143819460 # Gorchakov
id2 = 63365657 # Strelnikov
id3 = 1059322 # Stukal
dat <- getUserWall(user_id = id3, access_token = mytoken)
str(dat)
table(dat$reposted)
dat <- getUserWall(user_id = id2, access_token = mytoken)
str(dat)
fetched <- jsonlite::fromJSON(paste0('https://api.vk.com/method/wall.get?owner_id=', id2,'&count=100&fields=sex,bdate,city,country,timezone,photo_100,has_mobile,contacts,education,online,relation,last_seen,status,can_write_private_message,can_see_all_posts,can_post,universities&v=5.64&extended=0&access_token=',mytoken))
items <- fetched$response$items
items$attachments[1]
items$attachments[1][[1]]
items$attachments[2][[1]]
names(items$attachments[2][[1]])
names(items$attachments[2][[1]]$link)
names(items$attachments[1][[1]])
names(items$attachments[1][[1]]$photo)
str(dat)
output <- data.frame('id' = items$id,
'date' = as.Date(as.POSIXct(items$date, origin="1970-01-01")),
'date_POSIXct' = items$date,
'text' = items$text,
'comments_count' = items$comments$count,
'likes_count' = items$likes$count,
'reposts_count' = items$reposts$count,
'reposted' = sapply(1:nrow(items), function(k) ifelse(is.null(items$copy_history[k][[1]]), 0, 1)),
'reposted_from_id' = sapply(1:nrow(items), function(k) ifelse(is.null(items$copy_history[k][[1]]), NA, items$copy_history[k][[1]]$from_id)),
'reposted_original_date' = sapply(1:nrow(items), function(k) ifelse(is.null(items$copy_history[k][[1]]), NA, as.Date(as.POSIXct(items$copy_history[k][[1]]$date, origin="1970-01-01")))),
'reposted_original_date_POSIXct' = sapply(1:nrow(items), function(k) ifelse(is.null(items$copy_history[k][[1]]), NA, items$copy_history[k][[1]]$date)),
'attachment' = sapply(1:nrow(items), function(k) ifelse(!is.null(items$attachments[k][[1]]), items$attachments[k][[1]]$type, ifelse(is.null(unique(items$copy_history[k][[1]]$attachment[[1]]$type)), NA, unique(items$copy_history[k][[1]]$attachment[[1]]$type))  )),
'attachment_details' = NA
stringsAsFactors = F)
output <- data.frame('id' = items$id,
'date' = as.Date(as.POSIXct(items$date, origin="1970-01-01")),
'date_POSIXct' = items$date,
'text' = items$text,
'comments_count' = items$comments$count,
'likes_count' = items$likes$count,
'reposts_count' = items$reposts$count,
'reposted' = sapply(1:nrow(items), function(k) ifelse(is.null(items$copy_history[k][[1]]), 0, 1)),
'reposted_from_id' = sapply(1:nrow(items), function(k) ifelse(is.null(items$copy_history[k][[1]]), NA, items$copy_history[k][[1]]$from_id)),
'reposted_original_date' = sapply(1:nrow(items), function(k) ifelse(is.null(items$copy_history[k][[1]]), NA, as.Date(as.POSIXct(items$copy_history[k][[1]]$date, origin="1970-01-01")))),
'reposted_original_date_POSIXct' = sapply(1:nrow(items), function(k) ifelse(is.null(items$copy_history[k][[1]]), NA, items$copy_history[k][[1]]$date)),
'attachment' = sapply(1:nrow(items), function(k) ifelse(!is.null(items$attachments[k][[1]]), items$attachments[k][[1]]$type, ifelse(is.null(unique(items$copy_history[k][[1]]$attachment[[1]]$type)), NA, unique(items$copy_history[k][[1]]$attachment[[1]]$type))  )),
'attachment_details' = NA,
stringsAsFactors = F)
help(package = 'Rfacebook')
library(jsonlite)
a <- jsonlite::fromJSON(txt = 'https://oauth.vk.com/authorize?client_id=5978518&display=page&redirect_uri=https://oauth.vk.com/blank.html&scope=offline&response_type=token&v=5.52')
?browseURL
browseURL('http://hse.ru')
f <- file("stdin")
open(f)
ll
?readLines
b <- readLines()
new_url <- readline(prompt="Paste here the page you were forwarded to: ")
new_url
new_url <- readline(prompt="Paste here the page you were forwarded to: ")
new_url
?grepl
regexpr(pattern = 'access_token=', text = new_url)
b <- regexpr(pattern = 'access_token=', text = new_url)
b
attributes(b)
attributes(b)$match.length
b + attributes(b)$match.length
as.numeric(b) + attributes(b)$match.length
st <- regexpr(pattern = 'access_token=', text = new_url)
st <- as.numeric(st) + attributes(st)$match.length
st
new_url
fin <- regexpr(pattern = '&expires_in', text = new_url)
fin <- as.numeric(regexpr(pattern = '&expires_in', text = new_url))
new_url[st:fin]
substr(x = new_url, start = st, stop = fin)
fin <- as.numeric(regexpr(pattern = '&expires_in', text = new_url))-1
substr(x = new_url, start = st, stop = fin)
token <- substr(x = new_url, start = st, stop = fin)
makeAccessToken <- function() {
print('Hi!')
}
makeAccessToken
makeAccessToken()
makeAccessToken <- function() {
step1 <- readline(prompt="Have you read instructions on the help page for this function? Type y if yes: ")
if (step1 != 'y') {
print('Please, type ?makeAccessToken and read instructions in the Details section first. Then call this function again.')
}
}
makeAccessToken()
makeAccessToken <- function() {
step1 <- readline(prompt="Have you read instructions on the help page for this function? Type y if yes: ")
if (step1 != 'y') {
cat('Please, type ?makeAccessToken and read instructions in the Details section first. Then call this function again.\n')
}
}
makeAccessToken()
makeAccessToken <- function() {
background_check <- readline(prompt="Have you read instructions on the help page for this function? Type y if yes: ")
if (background_check != 'y') {
cat('Please, type ?makeAccessToken and read instructions in the Details section first. Then call this function again.\n')
return(NULL)
} else{
appid <- readline(prompt="Paste here the application id you got from VK: ")
cat("\nYou're going to be redirected to a webpage. Copy it's URL and paste it below.\n")
Sys.sleep(1)
browseURL(paste0('https://oauth.vk.com/authorize?client_id=', appid,'&display=page&redirect_uri=https://oauth.vk.com/blank.html&scope=offline&response_type=token&v=5.52'))
Sys.sleep(1)
new_url <- readline(prompt="Paste it here: ")
st <- regexpr(pattern = 'access_token=', text = new_url)
st <- as.numeric(st) + attributes(st)$match.length
fin <- as.numeric(regexpr(pattern = '&expires_in', text = new_url))-1
token <- substr(x = new_url, start = st, stop = fin)
return(token)
}
}
makeAccessToken()
makeAccessToken <- function() {
background_check <- readline(prompt="Have you read instructions on the help page for this function? Type y if yes: ")
if (background_check != 'y') {
cat('Please, type ?makeAccessToken and read instructions in the Details section first. Then call this function again.\n')
} else{
appid <- readline(prompt="Paste here the application id you got from VK: ")
cat("\nYou're going to be redirected to a webpage. Copy it's URL and paste it below.\n")
Sys.sleep(1)
browseURL(paste0('https://oauth.vk.com/authorize?client_id=', appid,'&display=page&redirect_uri=https://oauth.vk.com/blank.html&scope=offline&response_type=token&v=5.52'))
Sys.sleep(1)
new_url <- readline(prompt="Paste it here: ")
st <- regexpr(pattern = 'access_token=', text = new_url)
st <- as.numeric(st) + attributes(st)$match.length
fin <- as.numeric(regexpr(pattern = '&expires_in', text = new_url))-1
token <- substr(x = new_url, start = st, stop = fin)
return(token)
}
}
makeAccessToken()
makeAccessToken()
library(getPass)
install.packages('getPass')
library(getPass)
?getPass::getPass()
?getPass()
getPass::getPass()
u <- getPass::getPass()
makeAccessToken <- function(token_file_name) {
background_check <- readline(prompt="Have you read instructions on the help page for this function? Type y if yes: ")
if (background_check != 'y') {
cat('Please, type ?makeAccessToken and read instructions in the Details section first. Then call this function again.\n')
} else{
appid <- readline(prompt="Paste here the application id you got from VK: ")
cat("\nYou're going to be redirected to a webpage. Copy its URL and paste it below.\n")
Sys.sleep(1)
browseURL(paste0('https://oauth.vk.com/authorize?client_id=', appid,'&display=page&redirect_uri=https://oauth.vk.com/blank.html&scope=offline&response_type=token&v=5.52'))
Sys.sleep(1)
new_url <- readline(prompt="Paste it here: ")
st <- regexpr(pattern = 'access_token=', text = new_url)
st <- as.numeric(st) + attributes(st)$match.length
fin <- as.numeric(regexpr(pattern = '&expires_in', text = new_url))-1
token <- substr(x = new_url, start = st, stop = fin)
write(x = token, file = token_file_name)
# return(token)
}
}
makeAccessToken()
makeAccessToken <- function(token_file_name) {
if (!token_file_name) {
cat('STUPID!\n')
return(NULL)
}
background_check <- readline(prompt="Have you read instructions on the help page for this function? Type y if yes: ")
if (background_check != 'y') {
cat('Please, type ?makeAccessToken and read instructions in the Details section first. Then call this function again.\n')
} else{
appid <- readline(prompt="Paste here the application id you got from VK: ")
cat("\nYou're going to be redirected to a webpage. Copy its URL and paste it below.\n")
Sys.sleep(1)
browseURL(paste0('https://oauth.vk.com/authorize?client_id=', appid,'&display=page&redirect_uri=https://oauth.vk.com/blank.html&scope=offline&response_type=token&v=5.52'))
Sys.sleep(1)
new_url <- readline(prompt="Paste it here: ")
st <- regexpr(pattern = 'access_token=', text = new_url)
st <- as.numeric(st) + attributes(st)$match.length
fin <- as.numeric(regexpr(pattern = '&expires_in', text = new_url))-1
token <- substr(x = new_url, start = st, stop = fin)
write(x = token, file = token_file_name)
# return(token)
}
}
makeAccessToken()
makeAccessToken <- function(token_file_name) {
tryCatch(if (!token_file_name),
error = function(e) {cat('STUPID!\n')
return(NULL)})
background_check <- readline(prompt="Have you read instructions on the help page for this function? Type y if yes: ")
cat('Please, type ?makeAccessToken and read instructions in the Details section first. Then call this function again.\n')
} else{
appid <- readline(prompt="Paste here the application id you got from VK: ")
Sys.sleep(1)
browseURL(paste0('https://oauth.vk.com/authorize?client_id=', appid,'&display=page&redirect_uri=https://oauth.vk.com/blank.html&scope=offline&response_type=token&v=5.52'))
Sys.sleep(1)
new_url <- readline(prompt="Paste it here: ")
st <- as.numeric(st) + attributes(st)$match.length
fin <- as.numeric(regexpr(pattern = '&expires_in', text = new_url))-1
token <- substr(x = new_url, start = st, stop = fin)
write(x = token, file = token_file_name)
# return(token)
}
}
makeAccessToken()
makeAccessToken <- function(token_file_name) {
tryCatch(if (!token_file_name),
errors = function(e) {cat('STUPID!\n')
return(NULL)})
background_check <- readline(prompt="Have you read instructions on the help page for this function? Type y if yes: ")
cat('Please, type ?makeAccessToken and read instructions in the Details section first. Then call this function again.\n')
} else{
appid <- readline(prompt="Paste here the application id you got from VK: ")
Sys.sleep(1)
browseURL(paste0('https://oauth.vk.com/authorize?client_id=', appid,'&display=page&redirect_uri=https://oauth.vk.com/blank.html&scope=offline&response_type=token&v=5.52'))
Sys.sleep(1)
new_url <- readline(prompt="Paste it here: ")
st <- as.numeric(st) + attributes(st)$match.length
fin <- as.numeric(regexpr(pattern = '&expires_in', text = new_url))-1
token <- substr(x = new_url, start = st, stop = fin)
write(x = token, file = token_file_name)
# return(token)
}
}
makeAccessToken()
tryCatch(if (!token_file_name),
errors = function(e) {cat('STUPID!\n')
})
tryCatch(token_file_name,
errors = function(e) {cat('STUPID!\n')
})
tryCatch(token_file_name,
warning = function(w) {cat('\n')}
error = function(e) {cat('STUPID!\n')
})
tryCatch(token_file_name,
warning = function(w) {cat('\n')}
error = function(e) {cat('STUPID!\n')})
tryCatch(token_file_name, warning = function(w) {cat('\n')} error = function(e) {cat('STUPID!\n')})
tryCatch(token_file_name, warning = function(w) {cat('\n')}, error = function(e) {cat('STUPID!\n')})
tryCatch(token_file_name, error = function(e) {cat('STUPID!\n')})
makeAccessToken <- function(token_file_name) {
tryCatch(token_file_name, error = function(e) {cat('No token_file_name argument provided!\n') return(NULL)})
background_check <- readline(prompt="Have you read instructions on the help page for this function? Type y if yes: ")
cat('Please, type ?makeAccessToken and read instructions in the Details section first. Then call this function again.\n')
} else{
appid <- readline(prompt="Paste here the application id you got from VK: ")
Sys.sleep(1)
browseURL(paste0('https://oauth.vk.com/authorize?client_id=', appid,'&display=page&redirect_uri=https://oauth.vk.com/blank.html&scope=offline&response_type=token&v=5.52'))
Sys.sleep(1)
new_url <- readline(prompt="Paste it here: ")
st <- as.numeric(st) + attributes(st)$match.length
fin <- as.numeric(regexpr(pattern = '&expires_in', text = new_url))-1
token <- substr(x = new_url, start = st, stop = fin)
write(x = token, file = token_file_name)
# return(token)
}
}
makeAccessToken()
tryCatch(token_file_name, error = function(e) {cat('STUPID!\n') print('o!')})
tryCatch(token_file_name, error = function(e) {cat('STUPID!\n'); print('o!')})
makeAccessToken <- function(token_file_name) {
tryCatch(token_file_name, error = function(e) {cat('No token_file_name argument provided!\n'); return(NULL)})
background_check <- readline(prompt="Have you read instructions on the help page for this function? Type y if yes: ")
if (background_check != 'y') {
cat('Please, type ?makeAccessToken and read instructions in the Details section first. Then call this function again.\n')
} else{
appid <- readline(prompt="Paste here the application id you got from VK: ")
cat("\nYou're going to be redirected to a webpage. Copy its URL and paste it below.\n")
Sys.sleep(1)
browseURL(paste0('https://oauth.vk.com/authorize?client_id=', appid,'&display=page&redirect_uri=https://oauth.vk.com/blank.html&scope=offline&response_type=token&v=5.52'))
Sys.sleep(1)
new_url <- readline(prompt="Paste it here: ")
st <- regexpr(pattern = 'access_token=', text = new_url)
st <- as.numeric(st) + attributes(st)$match.length
fin <- as.numeric(regexpr(pattern = '&expires_in', text = new_url))-1
token <- substr(x = new_url, start = st, stop = fin)
write(x = token, file = token_file_name)
# return(token)
}
}
makeAccessToken()
makeAccessToken <- function(token_file_name) {
ok <- tryCatch(token_file_name, error = function(e) {cat('No token_file_name argument provided!\n'); return(FALSE)})
if (ok) {
background_check <- readline(prompt="Have you read instructions on the help page for this function? Type y if yes: ")
if (background_check != 'y') {
cat('Please, type ?makeAccessToken and read instructions in the Details section first. Then call this function again.\n')
} else{
appid <- readline(prompt="Paste here the application id you got from VK: ")
cat("\nYou're going to be redirected to a webpage. Copy its URL and paste it below.\n")
Sys.sleep(1)
browseURL(paste0('https://oauth.vk.com/authorize?client_id=', appid,'&display=page&redirect_uri=https://oauth.vk.com/blank.html&scope=offline&response_type=token&v=5.52'))
Sys.sleep(1)
new_url <- readline(prompt="Paste it here: ")
st <- regexpr(pattern = 'access_token=', text = new_url)
st <- as.numeric(st) + attributes(st)$match.length
fin <- as.numeric(regexpr(pattern = '&expires_in', text = new_url))-1
token <- substr(x = new_url, start = st, stop = fin)
write(x = token, file = token_file_name)
}
}
}
makeAccessToken()
makeAccessToken('~/Downloads/mytoken')
makeAccessToken <- function(token_file_name) {
ok <- tryCatch(token_file_name, error = function(e) {cat('No token_file_name argument provided!\n'); return(FALSE)})
if (ok != FALSE) {
background_check <- readline(prompt="Have you read instructions on the help page for this function? Type y if yes: ")
if (background_check != 'y') {
cat('Please, type ?makeAccessToken and read instructions in the Details section first. Then call this function again.\n')
} else{
appid <- readline(prompt="Paste here the application id you got from VK: ")
cat("\nYou're going to be redirected to a webpage. Copy its URL and paste it below.\n")
Sys.sleep(1)
browseURL(paste0('https://oauth.vk.com/authorize?client_id=', appid,'&display=page&redirect_uri=https://oauth.vk.com/blank.html&scope=offline&response_type=token&v=5.52'))
Sys.sleep(1)
new_url <- readline(prompt="Paste it here: ")
st <- regexpr(pattern = 'access_token=', text = new_url)
st <- as.numeric(st) + attributes(st)$match.length
fin <- as.numeric(regexpr(pattern = '&expires_in', text = new_url))-1
token <- substr(x = new_url, start = st, stop = fin)
write(x = token, file = token_file_name)
}
}
}
makeAccessToken('~/Downloads/mytoken')
makeAccessToken <- function(token_file_name) {
ok <- tryCatch(token_file_name, error = function(e) {cat('No token_file_name argument provided!\n'); return(FALSE)})
if (ok != FALSE) {
background_check <- readline(prompt="Have you read instructions on the help page for this function? Type y if yes: ")
if (background_check != 'y' | background_check != 'yes' ) {
cat('Please, type ?makeAccessToken and read instructions in the Details section first. Then call this function again.\n')
} else{
appid <- readline(prompt="Paste here the application id you got from VK: ")
cat("\nYou're going to be redirected to a webpage. Copy its URL and paste it below.\n")
Sys.sleep(1)
browseURL(paste0('https://oauth.vk.com/authorize?client_id=', appid,'&display=page&redirect_uri=https://oauth.vk.com/blank.html&scope=offline&response_type=token&v=5.52'))
Sys.sleep(1)
new_url <- readline(prompt="Paste it here: ")
st <- regexpr(pattern = 'access_token=', text = new_url)
st <- as.numeric(st) + attributes(st)$match.length
fin <- as.numeric(regexpr(pattern = '&expires_in', text = new_url))-1
token <- substr(x = new_url, start = st, stop = fin)
write(x = token, file = token_file_name)
}
}
}
makeAccessToken('~/Downloads/mytoken')
makeAccessToken <- function(token_file_name) {
ok <- tryCatch(token_file_name, error = function(e) {cat('No token_file_name argument provided!\n'); return(FALSE)})
if (ok != FALSE) {
background_check <- readline(prompt="Have you read instructions on the help page for this function? Type y if yes: ")
if (background_check != 'y' & background_check != 'yes' ) {
cat('Please, type ?makeAccessToken and read instructions in the Details section first. Then call this function again.\n')
} else{
appid <- readline(prompt="Paste here the application id you got from VK: ")
cat("\nYou're going to be redirected to a webpage. Copy its URL and paste it below.\n")
Sys.sleep(1)
browseURL(paste0('https://oauth.vk.com/authorize?client_id=', appid,'&display=page&redirect_uri=https://oauth.vk.com/blank.html&scope=offline&response_type=token&v=5.52'))
Sys.sleep(1)
new_url <- readline(prompt="Paste it here: ")
st <- regexpr(pattern = 'access_token=', text = new_url)
st <- as.numeric(st) + attributes(st)$match.length
fin <- as.numeric(regexpr(pattern = '&expires_in', text = new_url))-1
token <- substr(x = new_url, start = st, stop = fin)
write(x = token, file = token_file_name)
}
}
}
makeAccessToken('~/Downloads/mytoken')
rm(list = ls())
source('~/Downloads/Rvk/R/scrape_vk.R')
mytoken = '2e5e3352d9edb2e150c855162bd7e380d80188f1d6d5701ef8b8a32b570c995206ee7681b4b42e3a45c89'
notmytoken = '2e5e3352d9edb2e150c855162bd7e380d80188f1d6d5701ef8b8a32b570c995206ee7681b4b42e3a45c87'
id1 = 143819460 # Gorchakov
id2 = 63365657 # Strelnikov
id3 = 1059322 # Stukal
id4 = 19321117 # Nikita Ivanov
id5 = 3502037 # for reposts
idgroup = 106985077
dat0 <- getUserWall(user_id = id5, access_token = mytoken)
str(dat0)
dat0$date[1:10]
dat0$id[6]
dat <- getUserPostReposts(user_id = id5, post_id = 4234, access_token = mytoken)
str(dat)
rm(list = ls())
source('~/Downloads/Rvk/R/scrape_vk.R')
mytoken = '2e5e3352d9edb2e150c855162bd7e380d80188f1d6d5701ef8b8a32b570c995206ee7681b4b42e3a45c89'
notmytoken = '2e5e3352d9edb2e150c855162bd7e380d80188f1d6d5701ef8b8a32b570c995206ee7681b4b42e3a45c87'
id1 = 143819460 # Gorchakov
id2 = 63365657 # Strelnikov
id3 = 1059322 # Stukal
id4 = 19321117 # Nikita Ivanov
id5 = 3502037 # for reposts
idgroup = 106985077
dat0 <- getUserWall(user_id = id4, access_token = mytoken)
dat0$id[6]
dat <- getUserPostReposts(user_id = id4, post_id = 1953, access_token = mytoken)
fetched <- jsonlite::fromJSON(paste0('https://api.vk.com/method/wall.getComments?owner_id=', id5,'&post_id=', 1953,'&need_likes=1&fields=sex,bdate,city,country,timezone,photo_100,has_mobile,contacts,education,online,relation,last_seen,status,can_write_private_message,can_see_all_posts,can_post,universities&v=5.64&extended=0&access_token=', mytoken))
str(fetched)
fetched <- jsonlite::fromJSON(paste0('https://api.vk.com/method/wall.getComments?owner_id=', id4,'&post_id=', 1953,'&need_likes=1&fields=sex,bdate,city,country,timezone,photo_100,has_mobile,contacts,education,online,relation,last_seen,status,can_write_private_message,can_see_all_posts,can_post,universities&v=5.64&extended=0&access_token=', mytoken))
str(fetched)
dat <- getUserPostReposts(user_id = id4, post_id = 1953, access_token = mytoken)
items <- fetched$response$items
output <- data.frame('id' = items$id,
'from_id' = items$from_id,
'date' = items$date,
'text' = items$text,
'likes_count' = items$likes$count,
'reply_to_user' = items$reply_to_user,
'reply_to_comment' = items$reply_to_comment, stringsAsFactors = F)
nrow(output) == 0
dat <- getUserPostReposts(user_id = id4, post_id = 1953, access_token = mytoken)
dat <- getUserPostComments(user_id = id4, post_id = 1953, access_token = mytoken)
str(dat)
dat <- getUserPostReposts(user_id = id4, post_id = 1953, access_token = mytoken)
fetched <- jsonlite::fromJSON(paste0('https://api.vk.com/method/wall.getReposts?owner_id=', id4,'&post_id=', 1953,'&need_likes=1&fields=sex,bdate,city,country,timezone,photo_100,has_mobile,contacts,education,online,relation,last_seen,status,can_write_private_message,can_see_all_posts,can_post,universities&v=5.64&extended=0&access_token=', access_token))
fetched <- jsonlite::fromJSON(paste0('https://api.vk.com/method/wall.getReposts?owner_id=', id4,'&post_id=', 1953,'&need_likes=1&fields=sex,bdate,city,country,timezone,photo_100,has_mobile,contacts,education,online,relation,last_seen,status,can_write_private_message,can_see_all_posts,can_post,universities&v=5.64&extended=0&access_token=', mytoken))
str(fetched)
items <- fetched$response$items
str(items)
items <- subset(items, select = -copy_history)
output <- data.frame('post_id' = items$id,
'user_id' = items$from_id,
'date' = items$date,
'text' = items$text,
'device' = items$post_source$platform,
'num_comments' = items$comments$count,
'num_likes' = items$likes$count,
'num_reposts' = items$reposts$count,
'num_views' = items$views$count, stringsAsFactors = F)
nrow(output) == 0
names(items)
items$id
items$from_id
items$date
items$text
items$post_source$platform
items$post_source
items$comments$count
items$likes$count
items$reposts$count
items$views$count
rm(list = ls())
source('~/Downloads/Rvk/R/scrape_vk.R')
mytoken = '2e5e3352d9edb2e150c855162bd7e380d80188f1d6d5701ef8b8a32b570c995206ee7681b4b42e3a45c89'
notmytoken = '2e5e3352d9edb2e150c855162bd7e380d80188f1d6d5701ef8b8a32b570c995206ee7681b4b42e3a45c87'
id1 = 143819460 # Gorchakov
id2 = 63365657 # Strelnikov
id3 = 1059322 # Stukal
id4 = 19321117 # Nikita Ivanov
id5 = 3502037 # for reposts
idgroup = 106985077
dat <- getUserPostReposts(user_id = id4, post_id = 1953, access_token = mytoken)
str(dat)
dat0 <- getUserGroupsInfo(user_id = id4, access_token = mytoken)
str(dat0)
library(Rvk)
setwd('~/Downloads/Rvk')
devtools::check()
devtools::check()
library(knitr)
help(package = 'knitr')
rm(list = ls())
source('~/Downloads/Rvk/R/scrape_vk.R')
source('~/Dropbox/Math/PROGRAMMING/R/Code/Rvk/R/scrape_vk.R')
makeAccessToken(token_file_name = '~/Downloads/mytoken_trial')
mytoken <- readLines(con = '~/Downloads/mytoken_trial')
mytoken
library(Rvk)
devtools::install_github('denisStukal/Rvk')
library(Rvk)
?devtools::install_github
library(Rvk)
